name: Deploy_Application 
# This defines the name of the GitHub Actions workflow.

on:
  workflow_dispatch: # Allows the workflow to be triggered manually in the Actions tab
  push: # Triggers the workflow when code is pushed to the 'main' branch.
    branches: [main]
    paths:
      - 'frontend/**'
      - 'backend/**'
      - '.github/workflows/main.yml'

env:
  FRONTEND_IMAGE_NAME: mariammbello/resume-frontend # Defines an environment variable for the frontend Docker image name
  BACKEND_IMAGE_NAME: mariammbello/resume-backend # Defines an environment variable for the backend Docker image name

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3

    - name: 'Set up Docker Buildx'
      uses: docker/setup-buildx-action@v2

    - name: 'Login to GitHub Container Registry'
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: 'Build Frontend Docker Image'
      run: |
        docker build -t ghcr.io/${{ env.FRONTEND_IMAGE_NAME }}:latest -f frontend/Dockerfile .
    
    - name: 'Build Backend Docker Image'
      run: |
        docker build -t ghcr.io/${{ env.BACKEND_IMAGE_NAME }}:latest -f backend/Dockerfile .

    - name: 'Push Frontend Docker Image'
      run: |
        docker push ghcr.io/${{ env.FRONTEND_IMAGE_NAME }}:latest

    - name: 'Push Backend Docker Image'
      run: |
        docker push ghcr.io/${{ env.BACKEND_IMAGE_NAME }}:latest

  #Adding the complete deployment steps to actions
    - name: 'Copy deploy.sh to EC2'
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.HOST }}
        username: ubuntu
        key: ${{ secrets.KEY }}
        port: 22
        source: "docker-compose.yml,deploy.sh"
        target: /home/ubuntu
        strip_components: 0
        overwrite: true

    - name: 'Deploy to EC2 via SSH'
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ubuntu
        key: ${{ secrets.KEY }}
        port: 22
        script: |
          chmod +x /home/ubuntu/deploy.sh
          sudo sh /home/ubuntu/deploy.sh


 #verifying copy worked